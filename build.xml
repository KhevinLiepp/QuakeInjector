<project name="QuakeInjector"
         default="quakeinjector.compile"
         basedir=".">
  <dirname property="quakeinjector.basedir" file="${ant.file.QuakeInjector}"/>

  <condition property="imports" value="${quakeinjector.basedir}">
	<not><isset property="imports"/></not>
  </condition>

  <import file="${imports}/ant-helpers/osname.xml"/>

  <property name="quakeinjector.main-class" value="de.haukerehfeld.quakeinjector.QuakeInjector"/>

  <property name="quakeinjector.src" location="${quakeinjector.basedir}/src"/>
  <property name="quakeinjector.build" location="${quakeinjector.basedir}/bin"/>
  <property name="quakeinjector.dist"  location="${quakeinjector.basedir}/dist"/>
  <property name="quakeinjector.res"  location="${quakeinjector.basedir}/res"/>
  <property name="quakeinjector.webstart"  location="${quakeinjector.basedir}/webstart"/>

  <!--
	Classpath
	-->
  <path id="quakeinjector.class.path">
	<pathelement location="${quakeinjector.build}"/>
	<!-- ressources -->
	<pathelement location="${quakeinjector.res}"/>
  </path>
  <property name="quakeinjector.class.path" refid="quakeinjector.class.path"/>

  <path id="quakeinjector.library.path">
  </path>
  <property name="quakeinjector.library.path" refid="quakeinjector.library.path"/>

  <target name="clean" depends="quakeinjector.init">
        <delete includeemptydirs="true">
		  <fileset dir="${quakeinjector.build}" includes="**/*" />
		  <fileset dir="${quakeinjector.dist}" includes="**/*" />
		  <fileset dir="${quakeinjector.webstart}" includes="**/*.jar" />
		</delete>
  </target>

  <!-- 
	Init
	-->
  <target name="quakeinjector.init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${quakeinjector.build}"/>
    <mkdir dir="${quakeinjector.dist}"/>
    <mkdir dir="${quakeinjector.res}"/>
    <mkdir dir="${quakeinjector.webstart}"/>
  </target>

  <!-- compile with cp -->
  <target name="quakeinjector.compile" depends="quakeinjector.init"
          description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${quakeinjector.src}" destdir="${quakeinjector.build}" 
		   debug="on" debuglevel="lines,vars,source"
		   source="1.6" fork="true">
	  <classpath refid="quakeinjector.class.path"/>
<!--	  <compilerarg value="-Xlint"/> -->
<!--	  <compilerarg value="-Xlint:unchecked"/>
	  <compilerarg value="-Xlint:finally"/>
	  <compilerarg value="-Xlint:fallthrough"/> -->
	</javac>
  </target>

  <target name="run" depends="quakeinjector.compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <jvmarg value="-Xshare:off" />
	  <jvmarg value="-ea" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="benchmark" depends="quakeinjector.compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <arg value="benchmark" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>


  <target name="profile" depends="quakeinjector.compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-javaagent:../shiftone-jrat.jar" />
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="profileYK" depends="quakeinjector.compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-agentlib:yjpagent" />
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="quakeinjector.jar" depends="quakeinjector.compile">

	<jar destfile="${quakeinjector.dist}/quakeinjector-res.jar">
	  <fileset dir="${quakeinjector.res}/" excludes="*.lwo"/>
	</jar>


    <!-- we need other jars for the manifest classpath, so make sure
		 they're created above -->
	<path id="jars">
      <fileset dir="${engine.dist}" includes="*.jar"/>
      <fileset dir="${quakeinjector.dist}" includes="*.jar"/>
	</path>

	<pathconvert dirsep="/" pathsep=" " property="jars" refid="jars">
      <map from="${quakeinjector.basedir}" to=".."/>
    </pathconvert>

	<jar destfile="${quakeinjector.dist}/quakeinjector.jar"
		 >
	  <fileset dir="${quakeinjector.build}/" />
	  <manifest>
		<attribute name="Main-Class" value="${quakeinjector.main-class}"/>
		<attribute name="Class-Path" value="${jars}"/>
		<!-- Who is building this jar? -->
		<attribute name="Built-By" value="Hauke Rehfeld"/>
		<!-- Information about the program itself -->
		<attribute name="Implementation-Title" value="quakeinjectorschaftsspiel"/>
		<!--<attribute name="Implementation-Version" value="1.0.0beta2"/>-->
      </manifest>
	</jar>
  </target>

  <target name="quakeinjector.webstart" depends="quakeinjector.jar">
	<signjar destDir="${quakeinjector.webstart}"
			 alias="hrehfeld" keystore=".keystore"
			 storepass="blubb123"
			 preservelastmodified="true">
	  <path>
		<fileset dir="${engine.dist}" includes="**/*.jar" />
		<fileset dir="${quakeinjector.dist}" includes="**/*.jar" />
	  </path>
	</signjar>
  </target>
</project>
